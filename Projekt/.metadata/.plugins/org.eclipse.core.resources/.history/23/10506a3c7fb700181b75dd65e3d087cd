package networking.rmi.client;

import java.io.IOException;
import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ResourceBundle;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.stage.Modality;
import javafx.stage.Stage;
import networking.rmi.api.Service;
import networking.rmi.server.DatabaseConnection;

public class LoginFormController implements Initializable{

	@FXML private TextField txtLogin;
	@FXML private PasswordField txtPassword;
	@FXML private Label txtLabel;

	private String adminLogin = "sadmin";
	private String adminPassword = "admin2000";
	private String userLogin = "Jakub Benduch";
	private String userPassword = "user2000";

	private RMIClient main;
	private Service personService;

    Stage dialogStage = new Stage();
    Scene scene;

    Connection connection = null;
    PreparedStatement preparedStatement = null;
    ResultSet resultSet = null;

    //public FXMLDocumentController() {
       // connection = DatabaseConnection.getConnection();
    //}



    public void loginAction(ActionEvent event){
        String email = txtLogin.getText().toString();
        String password = txtPassword.getText().toString();

        String sql = "select * from employee where (email = ? and password = ?)";

        try{
			preparedStatement = DatabaseConnection.getConnection().prepareStatement(sql);
			//resultSet = preparedStatement.executeQuery(sql);

            //preparedStatement = connection.prepareStatement(sql);
            preparedStatement.setString(1, email);
            preparedStatement.setString(2, password);
            resultSet = preparedStatement.executeQuery(sql);
            if(!resultSet.next()){
                infoBox("Please enter correct Email and Password", null, "Failed");
            }else{
				FXMLLoader loader = new FXMLLoader(getClass().getResource("AdminMenu.fxml"));
				Stage stage = (Stage)((Node) event.getSource()).getScene().getWindow();
				Parent root;
				try {
					root = loader.load();

					AdminMenuController controller = loader.getController();
					controller.setMain(main,this);
					stage.setScene(new Scene(root));
				} catch (IOException ex) {
					ex.printStackTrace();
				}

                //infoBox("Login Successfull",null,"Success" );
                //Node node = (Node)event.getSource();
                //dialogStage = (Stage) node.getScene().getWindow();
                //dialogStage.close();
                //scene = new Scene(FXMLLoader.load(getClass().getResource("FXMLMenu.fxml")));
				//AdminMenuController controller = loader.getController();
				//controller.setMain(main,this);
                //dialogStage.setScene(scene);
                //dialogStage.show();
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }

    }


    public static void infoBox(String infoMessage, String headerText, String title){
        Alert alert = new Alert(AlertType.CONFIRMATION);
        alert.setContentText(infoMessage);
        alert.setTitle(title);
        alert.setHeaderText(headerText);
        alert.showAndWait();
    }





	@Override
	public void initialize(URL url, ResourceBundle rb) {
	}

	@FXML
	public void onLogin(ActionEvent e){
		String checkLogin = txtLogin.getText().toString();
		String checkPassword = txtPassword.getText().toString();

		if (checkLogin.isEmpty()) {
			txtLabel.setText("");
			Alert alert = new Alert(Alert.AlertType.WARNING);
			alert.initModality(Modality.APPLICATION_MODAL);
			alert.setTitle("Ostrze¿enie");
			alert.setHeaderText("Pole zawieraj¹ce nazwê u¿ytkownika jest puste!");
			alert.setContentText("Proszê wpisaæ nazwê u¿ytkownika");
			alert.showAndWait();
		} else if (checkPassword.isEmpty()){
			txtLabel.setText("");
			Alert alert = new Alert(Alert.AlertType.WARNING);
			alert.initModality(Modality.APPLICATION_MODAL);
			alert.setTitle("Ostrze¿enie");
			alert.setHeaderText("Pole zawieraj¹ce has³o jest puste!");
			alert.setContentText("Proszê wpisaæ has³o");
			alert.showAndWait();
		}
		else {
			if (checkLogin.equals(adminLogin)) {
				if (checkPassword.equals(adminPassword)){
					FXMLLoader loader = new FXMLLoader(getClass().getResource("AdminMenu.fxml"));
					Stage stage = (Stage)((Node) e.getSource()).getScene().getWindow();
					Parent root;
					try {
						root = loader.load();

						AdminMenuController controller = loader.getController();
						controller.setMain(main,this);
						stage.setScene(new Scene(root));
					} catch (IOException ex) {
						ex.printStackTrace();
					}
				} else {
					txtLabel.setText("Podane has³o jest nieprawid³owe!");
				}
			} else if (checkLogin.equals(userLogin)){
				if (checkPassword.equals(userPassword)) {
					FXMLLoader loader = new FXMLLoader(getClass().getResource("AdminMenu.fxml"));
					Stage stage = (Stage)((Node) e.getSource()).getScene().getWindow();
					Parent root;
					try {
						root = loader.load();
						stage.setScene(new Scene(root));
					} catch (IOException ex) {
						ex.printStackTrace();
					}
				} else {
					txtLabel.setText("Podane has³o jest nieprawid³owe!");
				}
			} else {
				txtLabel.setText("Podana nazwa u¿ytkownika jest nieprawid³owa!");
			}
		}
	}

	public void setMain(RMIClient main) {
		this.main = main;
		this.personService = main.getPersonService();
	}

	public String getAdminLogin() {
		return adminLogin;
	}
}
