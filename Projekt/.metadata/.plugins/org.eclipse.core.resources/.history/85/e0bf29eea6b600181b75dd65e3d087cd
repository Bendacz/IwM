package networking.rmi.client;

import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.stage.Modality;
import javafx.stage.Stage;
import networking.rmi.api.Service;

public class LoginFormController implements Initializable{

	@FXML private TextField txtLogin;
	@FXML private PasswordField txtPassword;
	@FXML private Label txtLabel;
	private String adminLogin = "sadmin";
	private String adminPassword = "admin2000";
	private String userLogin = "Jakub Benduch";
	private String userPassword = "user2000";

	private RMIClient main;
	private Service personService;

	@Override
	public void initialize(URL url, ResourceBundle rb) {
	}

	@FXML
	public void onLogin(ActionEvent e){
		String checkLogin = txtLogin.getText().toString();
		String checkPassword = txtPassword.getText().toString();

		if (checkLogin.isEmpty()) {
			txtLabel.setText("");
			Alert alert = new Alert(Alert.AlertType.WARNING);
			alert.initModality(Modality.APPLICATION_MODAL);
			alert.setTitle("Ostrze¿enie");
			alert.setHeaderText("Pole zawieraj¹ce nazwê u¿ytkownika jest puste!");
			alert.setContentText("Proszê wpisaæ nazwê u¿ytkownika");
			alert.showAndWait();
		} else if (checkPassword.isEmpty()){
			txtLabel.setText("");
			Alert alert = new Alert(Alert.AlertType.WARNING);
			alert.initModality(Modality.APPLICATION_MODAL);
			alert.setTitle("Ostrze¿enie");
			alert.setHeaderText("Pole zawieraj¹ce has³o jest puste!");
			alert.setContentText("Proszê wpisaæ has³o");
			alert.showAndWait();
		}
		else {
			if (checkLogin.equals(adminLogin)) {
				if (checkPassword.equals(adminPassword)){
					FXMLLoader loader = new FXMLLoader(getClass().getResource("AdminMenu.fxml"));
					Stage stage = (Stage)((Node) e.getSource()).getScene().getWindow();
					Parent root;
					try {
						root = loader.load();

						AdminMenuController controller = loader.getController();
						controller.setMain(main);

						stage.setScene(new Scene(root));
					} catch (IOException ex) {
						ex.printStackTrace();
					}
				} else {
					txtLabel.setText("Podane has³o jest nieprawid³owe!");
				}
			} else if (checkLogin.equals(userLogin)){
				if (checkPassword.equals(userPassword)) {
					FXMLLoader loader = new FXMLLoader(getClass().getResource("AdminMenu.fxml"));
					Stage stage = (Stage)((Node) e.getSource()).getScene().getWindow();
					Parent root;
					try {
						root = loader.load();
						stage.setScene(new Scene(root));
					} catch (IOException ex) {
						ex.printStackTrace();
					}
				} else {
					txtLabel.setText("Podane has³o jest nieprawid³owe!");
				}
			} else {
				txtLabel.setText("Podana nazwa u¿ytkownika jest nieprawid³owa!");
			}
		}
	}

	public void setMain(RMIClient main) {
		this.main = main;
		this.personService = main.getPersonService();
	}
}
